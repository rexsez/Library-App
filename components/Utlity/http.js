import axios from "axios";

import Announcement from "../../models/Announcement";
import Book from "../../models/Book";
import Student from "../../models/Student";

const database =
  "https://psu-library-app-default-rtdb.europe-west1.firebasedatabase.app/";

// ------------------------------------------Books Stuff----------------------------------------------------
export async function fetchBooks() {
  const response = await axios.get(database + "books.json");
  let databaseBooks = [];
  for (const key in response.data) {
    const bookData = response.data[key];
    let id = key;
    let author = bookData.author;
    let category = bookData.category;
    let date = new Date(bookData.date);
    let img =
      "https://static.remove.bg/remove-bg-web/c05ac62d076574fad1fbc81404cd6083e9a4152b/assets/start-1abfb4fe2980eabfbbaaa4365a0692539f7cd2725f324f904565a9a744f8e214.jpg";

    let rating = 1;
    let isbn = bookData.isbn;
    let summary = bookData.summary;
    let title = bookData.title;
    databaseBooks.push(
      new Book(
        id,
        isbn,
        title,
        img,
        author,
        date,
        category,
        summary,
        (Math.random() * (5 - 0 + 1) + 0).toFixed(2),
        false,
        null
      )
    );
  }
  return databaseBooks;
}

export async function fetchCategories() {
  const response = await axios.get(database + "categories.json");
  let databaseCategories = [];
  for (const key in response.data) {
    let category = response.data[key].category;
    console.log(category);
    databaseCategories.push({ label: category, value: category });
  }
  return databaseCategories;
}
// ------------------------------------------Announcement---------------------------------------------------
export async function fetchAnnouncements() {
  // basically await waits for the promise to happen. ---> returns a promise ....
  const response = await axios.get(database + "announcements.json");
  //.get returns the students object, which we will turn into an array.
  // this object has key generated by firebase as the key, and individual students objects
  // as values associated with the key.
  let announcements;
  for (const key in response.data) {
    const announcementsData = response.data[key];
    const announcement = new Announcement(
      announcementsData.everyone,
      announcementsData.staff,
      announcementsData.students
    );
    announcements = announcement;
  }
  return announcements;
}
// ---------------------------------------------------------------------------------------------------------
// this method can be used to add new student object to students object
// each new student object has a unique key generated by default by firebase
export function registerStudent(studentInfo) {
  axios.post(database + "students.json", studentInfo);
}
//this method can be used to get students object,
// then make that students object into an array to be used somewhere else.

// note axios.get is asynchronous --> so it returns promisees:
// promises are objects that give access to some data later in future.
export async function getStudents() {
  // basically await waits for the promise to happen. ---> returns a promise ....
  const response = await axios.get(database + "students.json");
  //.get returns the students object, which we will turn into an array.
  // this object has key generated by firebase as the key, and individual students objects
  // as values associated with the key.
  let students = [];
  for (const key in response.data) {
    const studentData = response.data[key];
    const student = new Student(
      studentData.FName,
      studentData.LName,
      studentData.Email,
      studentData.psw,
      studentData.borrowedBooks,
      studentData.favBooks
    );
    students.push(student);
  }
  return students;
}
